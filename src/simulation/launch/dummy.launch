<launch>
  <arg name="stopping_check_in" default="555" />
  <arg name="planner_in" default="RRT" />
  <arg name="kill_on_exit_in" default="true"/>
  <arg name="simulation_iterations_in" default="1"/>
  <arg name="gz_plot_lines_in" default="false"/>
  <arg name="publish_ctrl_path_in" default="true"/>
  <arg name="goal_state/x" default="-1"/>
  <arg name="goal_state/y" default="-9"/>
  <arg name="goal_state/theta" default="0"/>
  <arg name="ctrl_to_use_in" default="RANDOM_CTRL"/>


  <param name="simulation/gz_total_lines" type = "int" value="3" />
  <param name="simulation/iterations" type = "int" value="$(arg simulation_iterations_in)" />
  <param name="simulation/plot_lines" type = "bool" value="$(arg gz_plot_lines_in)"/>
  <param name="simulation/publish_ctrl_path" type="bool" value="$(arg publish_ctrl_path_in)"/>
  <node name = "get_obstacles_node" pkg = "simulation" type = "get_obstacles_node"/>
  <node name = "gz_visual_tools_node" pkg = "simulation" type = "gz_visual_tools_node" output = "screen"/>



  <include file="$(find motion_planning)/launch/motion_planning.launch">
    <arg name="stopping_check_arg" default = "$(arg stopping_check_in)" />
    <arg name="planner_arg" default = "$(arg planner_in)" />
    <arg name="kill_on_exit" default = "$(arg kill_on_exit_in)" />
    <arg name="goal_state/x" default = "$(arg goal_state/x)"/>
    <arg name="goal_state/y" default = "$(arg goal_state/y)"/>
    <arg name="goal_state/theta" default = "$(arg goal_state/theta)"/>
    <arg name="ctrl_to_use" default="$(arg ctrl_to_use_in)"/>
  </include>

  <include file = "$(find navigation)/launch/follow_path.launch">
  </include>

  <node name = "control_low_node" pkg = "control_low" type = "control_low_node"
    output = "screen" />

</launch>


<!-- roslaunch simulation dummy.launch stopping_check_in:=1000000
    planner_in:=RRT kill_on_exit_in:=false gz_plot_lines_in:=true
    publish_ctrl_path_in:=false ctrl_to_use_in:=BANG_BANG -->
